{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","TodoForm","users","onSubmit","useState","setTitle","titleErr","setTitleErr","userId","setUserId","userIdErr","setUserIdErr","action","method","e","preventDefault","emptyTitle","trim","htmlFor","type","value","placeholder","onChange","target","required","disabled","findUserById","usersFromServer","find","initialTodos","App","setTodos","nextTodoId","reduce","max","newTodo","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7187cb32.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport User from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport Todo from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport User from '../../types/User';\nimport Todo from '../../types/Todo';\n\ntype Props = {\n  users: User[];\n  id: number;\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({\n  users,\n  onSubmit,\n  id,\n}) => {\n  const [title, setTitle] = useState('');\n  const [titleErr, setTitleErr] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdErr, setUserIdErr] = useState(false);\n\n  const handleReset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const changeUserHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setUserIdErr(false);\n  };\n\n  const changeTitleHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setTitleErr(false);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const emptyTitle = !title.trim();\n\n    setTitleErr(emptyTitle);\n    setUserIdErr(!userId);\n\n    if (emptyTitle || !userId) {\n      return;\n    }\n\n    handleReset();\n\n    onSubmit({\n      title,\n      id,\n      userId,\n      completed: false,\n    });\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label htmlFor=\"title\">Title: </label>\n        <input\n          type=\"text\"\n          value={title}\n          data-cy=\"titleInput\"\n          id=\"title\"\n          placeholder=\"Enter a title\"\n          onChange={changeTitleHandler}\n        />\n        {titleErr && <span className=\"error\">Please enter a title</span>}\n\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user-id\">User: </label>\n        <select\n          id=\"user-id\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={changeUserHandler}\n          required\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option value={user.id} key={user.id}>{user.name}</option>\n          ))}\n        </select>\n        {userIdErr && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport Todo from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst findUserById = (userId: number) => usersFromServer.find(\n  ({ id }) => id === userId,\n) || null;\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: findUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const nextTodoId = todos.reduce((max, todo) => {\n    return todo.id > max ? todo.id : max;\n  }, 0) + 1;\n\n  const addTodo = (todo: Todo) => {\n    const newTodo: Todo = {\n      ...todo,\n      user: findUserById(todo.userId),\n    };\n\n    setTodos(prev => [...prev, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        id={nextTodoId}\n        users={usersFromServer}\n        onSubmit={addTodo}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}